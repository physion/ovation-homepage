@mixin font-face($name, $path, $weight: normal, $style: normal) {
	@font-face {
		font-family: $name;
		src: url('http://cdn2.hubspot.net/hubfs/730505/new-website-assets/fonts/' + $path + '-webfont.eot');
		src: url('http://cdn2.hubspot.net/hubfs/730505/new-website-assets/fonts/' + $path + '-webfont.eot?#iefix') format('embedded-opentype'),
				 url('http://cdn2.hubspot.net/hubfs/730505/new-website-assets/fonts/' + $path + '-webfont.woff') format('woff'),
				 url('http://cdn2.hubspot.net/hubfs/730505/new-website-assets/fonts/' + $path + '-webfont.woff') format('woff2'),
				 url('http://cdn2.hubspot.net/hubfs/730505/new-website-assets/fonts/' + $path + '-webfont.ttf') format('truetype'),
				 url('http://cdn2.hubspot.net/hubfs/730505/new-website-assets/fonts/' + $path + '-webfont.svg##{$name}') format('svg');
		font-weight: $weight;
		font-style: $style;
	}
}

/* CSS Effects */
@mixin opacity($opacity) {
	opacity: $opacity;
  $opacity-ie: $opacity * 100;
  .lt-ie9 & { -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$opacity-ie})"; } // IE8
  .lt-ie8 & { filter: alpha(opacity=$opacity-ie); } // IE 5-7
}

@mixin transition($properties...) {

  // Fix for vendor-prefix transform property
  $needs-prefixes: false;
  $webkit: ();
  $moz: ();
  $spec: ();

  // Create lists for vendor-prefixed transform
  @each $list in $properties {
    @if nth($list, 1) == "transform" {
      $needs-prefixes: true;
      $list1: -webkit-transform;
      $list2: -moz-transform;
      $list3: ();

      @each $var in $list {
        $list3: join($list3, $var);

        @if $var != "transform" {
          $list1: join($list1, $var);
          $list2: join($list2, $var);
        }
      }

      $webkit: append($webkit, $list1);
      $moz:    append($moz,    $list2);
      $spec:   append($spec,   $list3);
    } @else {
      $webkit: append($webkit, $list, comma);
      $moz:    append($moz,    $list, comma);
      $spec:   append($spec,   $list, comma);
    }
  }

}
